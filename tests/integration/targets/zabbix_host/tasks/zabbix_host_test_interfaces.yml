---
- name: 'Variables: Generate SNMP credentials'
  ansible.builtin.set_fact:
    zabbix_snmp_authpassphrase: '{{ lookup("password", "/dev/null" + " chars=hexdigits length=18") | lower }}'
    zabbix_snmp_privpassphrase: '{{ lookup("password", "/dev/null" + " chars=hexdigits length=18") | lower }}'

- name: Basic checks
  block:
    - name: Preparation - Clean all previous settings
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces: []

    - name: Test - Adding all interfaces with default parameters
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: agent
          - type: snmp
            details:
              version: 1
              bulk: true
              community: public
          - type: ipmi
          - type: jmx
      register: zabbix_host_interface_adding_all_by_default

    - name: Assert that host was updated and interfaces was added
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_adding_all_by_default is changed
          - "'Successfully updated host: zabbix_test_host' in zabbix_host_interface_adding_all_by_default.result"

    # Check idempotence and default value for an interface
    - name: Test - Update all interfaces with manual default parameters
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: agent
            ip: 127.0.0.1
            dns: ''
            useip: true
            port: 10050
          - type: snmp
            ip: 127.0.0.1
            dns: ''
            useip: true
            port: 161
            details:
              version: 1
              bulk: true
              community: public
          - type: ipmi
            ip: 127.0.0.1
            dns: ''
            useip: true
            port: 623
          - type: jmx
            ip: 127.0.0.1
            dns: ''
            useip: true
            port: 12345
      register: zabbix_host_interface_updating_all_with_manual_default_param

    - name: Assert that host was not updated and interfaces was not updated
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_updating_all_with_manual_default_param is not changed
          - "'No need to update host: zabbix_test_host' in zabbix_host_interface_updating_all_with_manual_default_param.result"

    - name: Test - Update all interfaces with different manual parameters
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: agent
            ip: 192.168.1.2
            dns: test.com
            useip: true
            port: 10060
          - type: snmp
            ip: 192.168.1.2
            dns: test.com
            useip: true
            port: 169
            details:
              version: 1
              community: 'public'
              bulk: true
          - type: ipmi
            ip: 192.168.1.2
            dns: test.com
            useip: true
            port: 650
          - type: jmx
            ip: 192.168.1.2
            dns: test.com
            useip: true
            port: 12354
      register: zabbix_host_interface_updating_all_with_manual_param

    - name: Assert that host was updated and interfaces was updated
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_updating_all_with_manual_param is changed
          - "'Successfully updated host: zabbix_test_host' in zabbix_host_interface_updating_all_with_manual_param.result"

    - name: Test - Check current interfaces setting
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: agent
            ip: 192.168.1.2
            dns: test.com
            useip: true
            port: 10060
          - type: snmp
            ip: 192.168.1.2
            dns: test.com
            useip: true
            port: 169
            details:
              version: 1
              community: 'public'
              bulk: true
          - type: ipmi
            ip: 192.168.1.2
            dns: test.com
            useip: true
            port: 650
          - type: jmx
            ip: 192.168.1.2
            dns: test.com
            useip: true
            port: 12354
      register: zabbix_host_interface_check_interface_setting

    - name: Assert that host was not updated
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_check_interface_setting is not changed
          - "'No need to update host: zabbix_test_host' in zabbix_host_interface_check_interface_setting.result"

    # Clean all interfaces
    - name: Test - Clean all interfaces
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces: []
      register: zabbix_host_interface_clean_all_interfaces

    - name: Assert that host was updated and interfaces was cleaned
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_clean_all_interfaces is changed
          - "'Successfully updated host: zabbix_test_host' in zabbix_host_interface_clean_all_interfaces.result"

    - name: Test - Check current setting after cleaning
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces: []
      register: zabbix_host_interface_clean_all_interfaces_again

    - name: Assert that host was not updated
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_clean_all_interfaces_again is not changed
          - "'No need to update host: zabbix_test_host' in zabbix_host_interface_clean_all_interfaces_again.result"

- name: Specifying two interfaces in one task
  block:
    - name: Test - Specifying two agent interfaces in one task
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: agent
            ip: 192.168.1.2
            useip: false
          - type: agent
      register: zabbix_host_interface_two_agent_if_in_one_task
      ignore_errors: true

    - name: Assert that host update was failed
      ansible.builtin.assert:
        that: zabbix_host_interface_two_agent_if_in_one_task is failed

    - name: Test - Specifying two snmp interfaces in one task
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 192.168.1.2
            useip: false
            details:
              version: 1
              community: 'test'
              bulk: true
          - type: snmp
            details:
              version: 1
              community: 'test'
              bulk: true
      register: zabbix_host_interface_two_snmp_if_in_one_task
      ignore_errors: true

    - name: Assert that host update was failed
      ansible.builtin.assert:
        that: zabbix_host_interface_two_snmp_if_in_one_task is failed

    - name: Test - Specifying two ipmi interfaces in one task
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: ipmi
            ip: 192.168.1.2
            useip: false
          - type: ipmi
      register: zabbix_host_interface_two_ipmi_if_in_one_task
      ignore_errors: true

    - name: Assert that host update was failed
      ansible.builtin.assert:
        that: zabbix_host_interface_two_ipmi_if_in_one_task is failed

    - name: Test - Specifying two jmx interfaces in one task
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: jmx
            ip: 192.168.1.2
            useip: false
          - type: jmx
      register: zabbix_host_interface_two_jmx_if_in_one_task
      ignore_errors: true

    - name: Assert that host update was failed
      ansible.builtin.assert:
        that: zabbix_host_interface_two_jmx_if_in_one_task is failed

- name: Changing Interfaces
  block:
    - name: Preparation - Clean previous setting and create one interface
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: agent

    - name: Test - Check current setting
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: agent
      register: zabbix_host_interface_check_current_setting

    - name: Assert that host update was not updated
      ansible.builtin.assert:
        that: zabbix_host_interface_check_current_setting is not changed

    # Create another one interface and check
    - name: Test - Create another one interface
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: agent
          - type: snmp
            details:
              version: 1
              community: 'test'
              bulk: true
      register: zabbix_host_interface_create_another_one_if

    - name: Assert that host update was updated and if was added
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_create_another_one_if is changed
          - "'Successfully updated host: zabbix_test_host' in zabbix_host_interface_create_another_one_if.result"

    - name: Test - Check current setting
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: agent
          - type: snmp
            details:
              version: 1
              community: 'test'
              bulk: true
      register: zabbix_host_interface_check_current_setting

    - name: Assert that host update was not updated
      ansible.builtin.assert:
        that: zabbix_host_interface_check_current_setting is not changed

    # Delete one interface and check
    - name: Test - Delete one interface
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            details:
              version: 1
              community: 'test'
              bulk: true
      register: zabbix_host_interface_delete_one_if

    - name: Assert that host update was updated and if was deleted
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_delete_one_if is changed
          - "'Successfully updated host: zabbix_test_host' in zabbix_host_interface_delete_one_if.result"

    - name: Test - Check current setting
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            details:
              version: 1
              community: 'test'
              bulk: true
      register: zabbix_host_interface_check_current_setting

    - name: Assert that host update was not updated
      ansible.builtin.assert:
        that: zabbix_host_interface_check_current_setting is not changed

    # Replacing with another type of interface. Adding new if and deleting old if within the same task
    - name: Test - Delete one interface
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: ipmi
      register: zabbix_host_interface_replacing_interfaces

    - name: Assert that host update was updated and if was replaced
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_replacing_interfaces is changed
          - "'Successfully updated host: zabbix_test_host' in zabbix_host_interface_replacing_interfaces.result"

    - name: Test - Check current setting
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: ipmi
      register: zabbix_host_interface_check_current_setting

    - name: Assert that host update was not updated
      ansible.builtin.assert:
        that: zabbix_host_interface_check_current_setting is not changed

    # All operations: create, delete, update, nothing to do in one task
    - name: Preparation - Create 3 if for next task
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            details:
              version: 1
              community: 'test'
              bulk: true
          - type: ipmi
          - type: jmx

    - name: Test - All operations in one task
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: agent
          - type: ipmi
          - type: jmx
            ip: 127.0.0.5
      register: zabbix_host_interface_all_operations_with_interfaces

    - name: Assert that host update was updated and if was replaced/deleted/created
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_all_operations_with_interfaces is changed
          - "'Successfully updated host: zabbix_test_host' in zabbix_host_interface_all_operations_with_interfaces.result"

    - name: Test - Check current setting
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: agent
          - type: ipmi
          - type: jmx
            ip: 127.0.0.5
      register: zabbix_host_interface_check_current_setting

    - name: Assert that host update was not updated
      ansible.builtin.assert:
        that: zabbix_host_interface_check_current_setting is not changed

- name: Templates and interfaces checks
  block:
    # Adding templates without interfaces
    - name: Preparation - Clean all interfaces
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces: []

    - name: Test - Adding templates without interfaces
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        templates:
          - Linux by Zabbix agent
      register: zabbix_host_interface_temp_wo_if
      ignore_errors: true

    - name: Assert that host update was not updated
      ansible.builtin.assert:
        that: zabbix_host_interface_temp_wo_if is failed

    # Adding interface and template in one task
    - name: Test - Adding interface and template in one task
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: agent
        templates:
          - Linux by Zabbix agent
      register: zabbix_host_interface_add_if_and_templ

    - name: Assert that host update was updated and if was added
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_add_if_and_templ is changed
          - "'Successfully updated host: zabbix_test_host' in zabbix_host_interface_add_if_and_templ.result"

    - name: Test - Check current setting
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: agent
        templates:
          - Linux by Zabbix agent
      register: zabbix_host_interface_check_current_setting

    - name: Assert that host update was not updated
      ansible.builtin.assert:
        that: zabbix_host_interface_check_current_setting is not changed

    # Changing interface with attached items and check
    - name: Test - Changing interface wit attached items
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: agent
            ip: 127.0.0.5
      register: zabbix_host_interface_change_if_with_items

    - name: Assert that host update was updated and if was updated
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_change_if_with_items is changed
          - "'Successfully updated host: zabbix_test_host' in zabbix_host_interface_change_if_with_items.result"

    - name: Test - Check current setting
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: agent
            ip: 127.0.0.5
      register: zabbix_host_interface_check_current_setting

    - name: Assert that host update was not updated
      ansible.builtin.assert:
        that: zabbix_host_interface_check_current_setting is not changed

    # Removing interface with attached items
    - name: Test - Removing interface with attached items
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces: []
      register: zabbix_host_interface_remove_if_w_attached_items
      ignore_errors: true

    - name: Assert that host update was not updated
      ansible.builtin.assert:
        that: zabbix_host_interface_remove_if_w_attached_items is failed

    # Deleting interface and template in one task
    - name: Test - Changing interface with attached items
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces: []
        templates: []
      register: zabbix_host_interface_clean_templ_and_if

    - name: Assert that host update was updated and if with templates was deleted
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_clean_templ_and_if is changed
          - "'Successfully updated host: zabbix_test_host' in zabbix_host_interface_clean_templ_and_if.result"

    - name: Test - Check current setting
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces: []
        templates: []
      register: zabbix_host_interface_check_current_setting

    - name: Assert that host update was not updated
      ansible.builtin.assert:
        that: zabbix_host_interface_check_current_setting is not changed

- name: IP/DNS checks
  block:
    - name: Test - Create interface with dns monitoring without dns name
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: agent
            ip: 192.168.1.2
            useip: false
      register: zabbix_host_interface_update_dns_wo_dns_name
      ignore_errors: true

    - name: Assert that host update was failed
      ansible.builtin.assert:
        that: zabbix_host_interface_update_dns_wo_dns_name is failed

    - name: Test - Create interface with dns monitoring with dns name
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: agent
            dns: test.com
            useip: false
      register: zabbix_host_interface_update_dns_w_dns_name
      ignore_errors: true

    - name: Assert that host interfaces were updated
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_update_dns_w_dns_name is changed
          - "'Successfully updated host: zabbix_test_host' in zabbix_host_interface_update_dns_w_dns_name.result"

    # Check that the ip field was empty and ip and dns can be set at the same time
    - name: Test - Create interface with dns monitoring with dns name and ip
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: agent
            ip: 127.0.0.1
            dns: test.com
            useip: false
      register: zabbix_host_interface_update_dns_w_dns_name_and_ip

    - name: Assert that host interfaces were updated
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_update_dns_w_dns_name_and_ip is changed
          - "'Successfully updated host: zabbix_test_host' in zabbix_host_interface_update_dns_w_dns_name_and_ip.result"

- name: SNMP checks
  block:
    # Check v1 and v2 interfaces
    - name: Test - Create snmp interface v1
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 1
              community: 'test'
              bulk: true
      register: zabbix_host_interface_update_snmp_v1

    - name: Assert that host interface was updated
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_update_snmp_v1 is changed
          - "'Successfully updated host: zabbix_test_host' in zabbix_host_interface_update_snmp_v1.result"

    - name: Test - Create snmp interface v2
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 2
              community: 'test'
              bulk: true
      register: zabbix_host_interface_update_snmp_v2
      ignore_errors: true

    - name: Test - Create snmp interface v2 (Zabbix 6.4)
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 2
              community: 'test'
              max_repetitions: 10
              bulk: true
      register: zabbix_host_interface_update_snmp_v2_64
      ignore_errors: true

    - name: Assert that host interface was updated
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_update_snmp_v2 or zabbix_host_interface_update_snmp_v2_64 is changed

    # noAuthNoPriv
    - name: Test - Create snmp v3 with noAuthNoPriv with parameters
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            useip: true
            ip: 127.0.0.1
            details:
              version: 3
              contextname: ''
              securityname: ''
              securitylevel: noAuthNoPriv
              bulk: true
      register: zabbix_host_interface_update_snmp_v3_noauthnopriv_w_parameters
      ignore_errors: true

    - name: Test - Create snmp v3 with noAuthNoPriv with parameters (Zabbix 6.4)
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            useip: true
            ip: 127.0.0.1
            details:
              version: 3
              contextname: ''
              securityname: ''
              securitylevel: noAuthNoPriv
              max_repetitions: 10
              bulk: true
      register: zabbix_host_interface_update_snmp_v3_noauthnopriv_w_parameters_64
      ignore_errors: true

    - name: Assert that host interface was updated
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_update_snmp_v3_noauthnopriv_w_parameters or zabbix_host_interface_update_snmp_v3_noauthnopriv_w_parameters_64 is changed

    # authNoPriv
    - name: Test - Create snmp v3 with authNoPriv with parameters
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            useip: true
            ip: 127.0.0.1
            details:
              version: 3
              contextname: ''
              securityname: ''
              securitylevel: authNoPriv
              authprotocol: sha512
              authpassphrase: '{{ zabbix_snmp_authpassphrase }}'
              bulk: true
      register: zabbix_host_interface_update_snmp_v3_authnopriv_w_parameters
      ignore_errors: true

    - name: Test - Create snmp v3 with authNoPriv with parameters (Zabbix 6.4)
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            useip: true
            ip: 127.0.0.1
            details:
              version: 3
              contextname: ''
              securityname: ''
              max_repetitions: 10
              securitylevel: authNoPriv
              authprotocol: sha512
              authpassphrase: '{{ zabbix_snmp_authpassphrase }}'
              bulk: true
      register: zabbix_host_interface_update_snmp_v3_authnopriv_w_parameters_64
      ignore_errors: true

    - name: Assert that host interface was updated
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_update_snmp_v3_authnopriv_w_parameters or zabbix_host_interface_update_snmp_v3_authnopriv_w_parameters_64 is changed

    # authPriv
    - name: Test - Create snmp v3 with authPriv with parameters
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            useip: true
            ip: 127.0.0.1
            details:
              version: 3
              contextname: ''
              securityname: ''
              securitylevel: authPriv
              authprotocol: sha512
              authpassphrase: '{{ zabbix_snmp_authpassphrase }}'
              privprotocol: aes256c
              privpassphrase: '{{ zabbix_snmp_privpassphrase }}'
              bulk: true
      register: zabbix_host_interface_update_snmp_v3_authpriv_w_parameters
      ignore_errors: true

    - name: Test - Create snmp v3 with authPriv with parameters (Zabbix 6.4)
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            useip: true
            ip: 127.0.0.1
            details:
              version: 3
              contextname: ''
              securityname: ''
              max_repetitions: 10
              securitylevel: authPriv
              authprotocol: sha512
              authpassphrase: '{{ zabbix_snmp_authpassphrase }}'
              privprotocol: aes256c
              privpassphrase: '{{ zabbix_snmp_privpassphrase }}'
              bulk: true
      register: zabbix_host_interface_update_snmp_v3_authpriv_w_parameters_64
      ignore_errors: true

    - name: Assert that host interface was updated
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_update_snmp_v3_authpriv_w_parameters or zabbix_host_interface_update_snmp_v3_authpriv_w_parameters_64 is changed

- name: SNMP details
  block:
    # Check v1
    - name: Test - Create snmp interface v1 without community
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 1
              bulk: true
      register: zabbix_host_interface_snmp_v1_wo_community
      ignore_errors: true

    - name: Assert that task was failed
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_snmp_v1_wo_community is failed

    - name: Test - Create snmp interface v1 without bulk and community
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 1
      register: zabbix_host_interface_snmp_v1_wo_bulk_community
      ignore_errors: true

    - name: Assert that task was failed
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_snmp_v1_wo_bulk_community is failed

    - name: Test - Create snmp interface v1 with additional parameter
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 1
              community: public
              bulk: true
              contextname: contextname
      register: zabbix_host_interface_snmp_v1_w_contextname
      ignore_errors: true

    - name: Assert that task was failed
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_snmp_v1_w_contextname is failed

    - name: Test - Create snmp interface v1 with additional parameter and missing bulk
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 1
              community: public
              contextname: contextname
      register: zabbix_host_interface_snmp_v1_w_contextname_wo_bulk
      ignore_errors: true

    - name: Assert that task was failed
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_snmp_v1_w_contextname_wo_bulk is failed

    # Check v2
    - name: Test - Create snmp interface v2 without community
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 2
              bulk: true
      register: zabbix_host_interface_snmp_v2_wo_community
      ignore_errors: true

    - name: Test - Create snmp interface v2 without community (Zabbix 6.4)
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 2
              bulk: true
              max_repetitions: 10
      register: zabbix_host_interface_snmp_v2_wo_community_64
      ignore_errors: true

    - name: Assert that task was failed
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_snmp_v2_wo_community and zabbix_host_interface_snmp_v2_wo_community_64 is failed

    - name: Test - Create snmp interface v2 without bulk and community
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 2
      register: zabbix_host_interface_snmp_v2_wo_bulk_community
      ignore_errors: true

    - name: Test - Create snmp interface v2 without bulk and community (Zabbix 6.4)
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 2
              max_repetitions: 10
      register: zabbix_host_interface_snmp_v2_wo_bulk_community_64
      ignore_errors: true

    - name: Assert that task was failed
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_snmp_v2_wo_bulk_community and zabbix_host_interface_snmp_v2_wo_bulk_community_64 is failed

    - name: Test - Create snmp interface v2 with additional parameter
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 2
              community: public
              bulk: true
              contextname: contextname
      register: zabbix_host_interface_snmp_v2_w_contextname
      ignore_errors: true

    - name: Test - Create snmp interface v2 with additional parameter (Zabbix 6.4)
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 2
              community: public
              max_repetitions: 10
              bulk: true
              contextname: contextname
      register: zabbix_host_interface_snmp_v2_w_contextname_64
      ignore_errors: true

    - name: Assert that task was failed
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_snmp_v2_w_contextname and zabbix_host_interface_snmp_v2_w_contextname_64 is failed

    - name: Test - Create snmp interface v2 with additional parameter and missing bulk
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 2
              community: public
              contextname: contextname
      register: zabbix_host_interface_snmp_v2_w_contextname_wo_bulk
      ignore_errors: true

    - name: Test - Create snmp interface v2 with additional parameter and missing bulk (Zabbix 6.4)
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 2
              max_repetitions: 10
              community: public
              contextname: contextname
      register: zabbix_host_interface_snmp_v2_w_contextname_wo_bulk_64
      ignore_errors: true

    - name: Assert that task was failed
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_snmp_v2_w_contextname_wo_bulk and zabbix_host_interface_snmp_v2_w_contextname_wo_bulk_64 is failed

    # Check v3
    - name: Test - Create snmp interface v3 without securitylevel
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 3
              contextname: ''
              securityname: ''
              authprotocol: sha512
              authpassphrase: '{{ zabbix_snmp_authpassphrase }}'
              privprotocol: aes256c
              privpassphrase: '{{ zabbix_snmp_privpassphrase }}'
              bulk: true
      register: zabbix_host_interface_snmp_v3_wo_securitylevel
      ignore_errors: true

    - name: Test - Create snmp interface v3 without securitylevel (Zabbix 6.4)
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 3
              max_repetitions: 10
              contextname: ''
              securityname: ''
              authprotocol: sha512
              authpassphrase: '{{ zabbix_snmp_authpassphrase }}'
              privprotocol: aes256c
              privpassphrase: '{{ zabbix_snmp_privpassphrase }}'
              bulk: true
      register: zabbix_host_interface_snmp_v3_wo_securitylevel_64
      ignore_errors: true

    - name: Assert that task was failed
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_snmp_v3_wo_securitylevel and zabbix_host_interface_snmp_v3_wo_securitylevel_64 is failed

    - name: Test - Create snmp interface v3 without bulk
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 3
              contextname: ''
              securityname: ''
              authprotocol: sha512
              securitylevel: authPriv
              authpassphrase: '{{ zabbix_snmp_authpassphrase }}'
              privprotocol: aes256c
              privpassphrase: '{{ zabbix_snmp_privpassphrase }}'
      register: zabbix_host_interface_snmp_v3_wo_bulk
      ignore_errors: true

    - name: Test - Create snmp interface v3 without bulk (Zabbix 6.4)
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 3
              max_repetitions: 10
              contextname: ''
              securityname: ''
              authprotocol: sha512
              securitylevel: authPriv
              authpassphrase: '{{ zabbix_snmp_authpassphrase }}'
              privprotocol: aes256c
              privpassphrase: '{{ zabbix_snmp_privpassphrase }}'
      register: zabbix_host_interface_snmp_v3_wo_bulk_64
      ignore_errors: true

    - name: Assert that task was failed
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_snmp_v3_wo_bulk and zabbix_host_interface_snmp_v3_wo_bulk_64 is failed

    - name: Test - Create snmp interface v3 with additional parameter community
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 3
              contextname: ''
              securityname: ''
              securitylevel: authPriv
              authprotocol: sha512
              authpassphrase: '{{ zabbix_snmp_authpassphrase }}'
              privprotocol: aes256c
              privpassphrase: '{{ zabbix_snmp_privpassphrase }}'
              bulk: true
              community: public
      register: zabbix_host_interface_snmp_v3_w_community
      ignore_errors: true

    - name: Test - Create snmp interface v3 with additional parameter community (Zabbix 6.4)
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 3
              contextname: ''
              securityname: ''
              max_repetitions: 10
              securitylevel: authPriv
              authprotocol: sha512
              authpassphrase: '{{ zabbix_snmp_authpassphrase }}'
              privprotocol: aes256c
              privpassphrase: '{{ zabbix_snmp_privpassphrase }}'
              bulk: true
              community: public
      register: zabbix_host_interface_snmp_v3_w_community_64
      ignore_errors: true

    - name: Assert that task was failed
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_snmp_v3_w_community and zabbix_host_interface_snmp_v3_w_community_64 is failed

    - name: Test - Create snmp interface v3 with authNoPriv without parameters
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 3
              contextname: ''
              securityname: ''
              securitylevel: authNoPriv
              bulk: true
      register: zabbix_host_interface_snmp_v3_wo_auth_parameters
      ignore_errors: true

    - name: Test - Create snmp interface v3 with authNoPriv without parameters (Zabbix 6.4)
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 3
              max_repetitions: 10
              contextname: ''
              securityname: ''
              securitylevel: authNoPriv
              bulk: true
      register: zabbix_host_interface_snmp_v3_wo_auth_parameters_64
      ignore_errors: true

    - name: Assert that task was failed
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_snmp_v3_wo_auth_parameters and zabbix_host_interface_snmp_v3_wo_auth_parameters_64 is failed

    - name: Test - Create snmp interface v3 with authNoPriv with all parameters
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 3
              contextname: ''
              securityname: ''
              securitylevel: authNoPriv
              authprotocol: sha512
              authpassphrase: '{{ zabbix_snmp_authpassphrase }}'
              privprotocol: aes256c
              privpassphrase: '{{ zabbix_snmp_privpassphrase }}'
              bulk: true
      register: zabbix_host_interface_snmp_v3_w_all_parameters
      ignore_errors: true

    - name: Test - Create snmp interface v3 with authNoPriv with all parameters (Zabbix 6.4)
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 3
              contextname: ''
              securityname: ''
              max_repetitions: 10
              securitylevel: authNoPriv
              authprotocol: sha512
              authpassphrase: '{{ zabbix_snmp_authpassphrase }}'
              privprotocol: aes256c
              privpassphrase: '{{ zabbix_snmp_privpassphrase }}'
              bulk: true
      register: zabbix_host_interface_snmp_v3_w_all_parameters_64
      ignore_errors: true

    - name: Assert that task was failed
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_snmp_v3_w_all_parameters and zabbix_host_interface_snmp_v3_w_all_parameters_64 is failed

    - name: Test - Create snmp interface v3 with authNoPriv with priv parameters
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 3
              contextname: ''
              securityname: ''
              securitylevel: authNoPriv
              privprotocol: aes256c
              privpassphrase: '{{ zabbix_snmp_privpassphrase }}'
              bulk: true
      register: zabbix_host_interface_snmp_v3_w_priv_parameters
      ignore_errors: true

    - name: Test - Create snmp interface v3 with authNoPriv with priv parameters (Zabbix 6.4)
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 3
              max_repetitions: 10
              contextname: ''
              securityname: ''
              securitylevel: authNoPriv
              privprotocol: aes256c
              privpassphrase: '{{ zabbix_snmp_privpassphrase }}'
              bulk: true
      register: zabbix_host_interface_snmp_v3_w_priv_parameters_64
      ignore_errors: true

    - name: Assert that task was failed
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_snmp_v3_w_priv_parameters and zabbix_host_interface_snmp_v3_w_priv_parameters_64 is failed

    - name: Test - Create snmp interface v3 with authPriv without parameters
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 3
              contextname: ''
              securityname: ''
              securitylevel: authPriv
              bulk: true
      register: zabbix_host_interface_snmp_v3_wo_auth_parameters
      ignore_errors: true

    - name: Test - Create snmp interface v3 with authPriv without parameters (Zabbix 6.4)
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 3
              max_repetitions: 10
              contextname: ''
              securityname: ''
              securitylevel: authPriv
              bulk: true
      register: zabbix_host_interface_snmp_v3_wo_auth_parameters_64
      ignore_errors: true

    - name: Assert that task was failed
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_snmp_v3_wo_auth_parameters and zabbix_host_interface_snmp_v3_wo_auth_parameters_64 is failed

    - name: Test - Create snmp interface v3 with authPriv with auth parameters
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 3
              contextname: ''
              securityname: ''
              securitylevel: authPriv
              authprotocol: sha512
              authpassphrase: '{{ zabbix_snmp_authpassphrase }}'
              bulk: true
      register: zabbix_host_interface_snmp_v3_w_auth_parameters
      ignore_errors: true

    - name: Test - Create snmp interface v3 with authPriv with auth parameters (Zabbix 6.4)
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 3
              max_repetitions: 10
              contextname: ''
              securityname: ''
              securitylevel: authPriv
              authprotocol: sha512
              authpassphrase: '{{ zabbix_snmp_authpassphrase }}'
              bulk: true
      register: zabbix_host_interface_snmp_v3_w_auth_parameters_64
      ignore_errors: true

    - name: Assert that task was failed
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_snmp_v3_w_auth_parameters and zabbix_host_interface_snmp_v3_w_auth_parameters_64 is failed

    - name: Test - Create snmp interface v3 with authPriv with priv parameters
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 3
              contextname: ''
              securityname: ''
              securitylevel: authPriv
              privprotocol: aes256c
              privpassphrase: '{{ zabbix_snmp_privpassphrase }}'
              bulk: true
      register: zabbix_host_interface_snmp_v3_w_priv_parameters
      ignore_errors: true

    - name: Test - Create snmp interface v3 with authPriv with priv parameters (Zabbix 6.4)
      zabbix.zabbix.zabbix_host:
        host: zabbix_test_host
        interfaces:
          - type: snmp
            ip: 127.0.0.1
            dns: test.com
            port: 161
            details:
              version: 3
              max_repetitions: 10
              contextname: ''
              securityname: ''
              securitylevel: authPriv
              privprotocol: aes256c
              privpassphrase: '{{ zabbix_snmp_privpassphrase }}'
              bulk: true
      register: zabbix_host_interface_snmp_v3_w_priv_parameters_64
      ignore_errors: true

    - name: Assert that task was failed
      ansible.builtin.assert:
        that:
          - zabbix_host_interface_snmp_v3_w_priv_parameters and zabbix_host_interface_snmp_v3_w_priv_parameters_64 is failed
