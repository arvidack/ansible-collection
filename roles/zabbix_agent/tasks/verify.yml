---
### These tasks are meant for role testing
- name: 'Verify : Pause for 5 seconds'
  ansible.builtin.pause:
    seconds: 5
  tags: [verify]

- name: 'Verify : Gather agent status'
  become: true
  ansible.builtin.systemd:
    name: '{{ agent.service_name }}'
  register: get_agent_service
  tags: [verify]

- name: 'Import vars: TLS Certificate variables'
  when: verification is defined and verification and (param_tlsconnect == "cert" or "cert" in param_tlsaccept)
  ansible.builtin.include_vars: tls_cert_parameters.yml

- name: 'Import vars: Custom user overrrides'
  when: verification is defined and verification and service_user != "zabbix"
  ansible.builtin.include_vars: custom_user_overrides.yml

- name: 'Verify : Zabbix_get : Local : Agent variant'
  become: true
  register: get_agent_variant
  # first tlsaccept value taken for connection settings
  ansible.builtin.command: >-
      /usr/bin/zabbix_get
      -k agent.variant
      -s {{ ansible_host }}
      -t 5
      {{ "-p " + param_listenport | string if param_listenport is defined }}
      {{ "--tls-connect " + param_tlsaccept[0] if param_tlsaccept[0] is defined and param_tlsaccept[0] in ["cert","psk"]}}
      {{ "--tls-ca-file " + param_tlscafile if param_tlscafile is defined and param_tlsaccept[0] == "cert" }}
      {{ "--tls-cert-file " + param_tlscertfile if param_tlscertfile is defined and param_tlsaccept[0] == "cert" }}
      {{ "--tls-key-file " + param_tlskeyfile if param_tlskeyfile is defined and param_tlsaccept[0] == "cert" }}
      {{ "--tls-psk-identity " + param_tlspskidentity if param_tlspskidentity is defined and param_tlsaccept[0] == "psk" }}
      {{ "--tls-psk-file " +  param_tlspskfile if param_tlspskfile is defined and param_tlsaccept[0] == "psk" }}
  changed_when: false
  ignore_errors: true
  tags: [verify]

- name: 'Verify : Zabbix_get : Controller : Agent version'
  delegate_to: localhost
  register: controller_get_agent_version
  # first tlsaccept value taken for connection settings
  ansible.builtin.command: >-
      zabbix_get -k agent.version
      -s {{ ansible_host }}
      -t 5
      {% if driver is defined and driver in ["podman", "docker"] %}
      -p {{ ext_agent_port2 if agent_variant | string == "2" else ext_agent_port }}
      {% elif param_listenport is defined and param_listenport %}
      -p {{ param_listenport }}
      {% endif %}
      {{ "--tls-connect " + param_tlsaccept[0] if param_tlsaccept[0] is defined and param_tlsaccept[0] in ["cert","psk"]}}
      {{ "--tls-ca-file " + source_tlscafile if source_tlscafile is defined and param_tlsaccept[0] == "cert" }}
      {{ "--tls-cert-file " + source_tlscertfile if source_tlscertfile is defined and param_tlsaccept[0] == "cert" }}
      {{ "--tls-key-file " + source_tlskeyfile if source_tlskeyfile is defined and param_tlsaccept[0] == "cert" }}
      {{ "--tls-psk-identity " + param_tlspskidentity if param_tlspskidentity is defined and param_tlsaccept[0] == "psk" }}
      {{ "--tls-psk-file " + source_tlspskfile if param_tlsaccept[0] == "psk" }}
  changed_when: false
  ignore_errors: true
  vars:
    molecule_path: '{{ "files/" if driver is defined and driver in ["podman", "docker"] else "" }}'
  tags: [verify]

- name: Zabbix agent variant, major version and status checks
  ansible.builtin.assert:
    that:
      - controller_get_agent_version.stdout | regex_search("\d+\.\d+") is version(agent_major_version | string, "=", strict=false)
      - get_agent_variant.stdout | string == agent_variant | string
      - get_agent_service.status.ActiveState | lower in ["running", "active"]
      - get_agent_service.status.MainPID | int >= 0
      - get_agent_service.status.UnitFileState | lower == "enabled"
  tags: [never, assert]

- name: 'Report : {{ report_path }}'
  delegate_to: localhost
  throttle: 1
  ansible.builtin.lineinfile:
    create: true
    path: '{{ report_path }}'
    line: >-
      {{ ansible_date_time.date }}T{{ ansible_date_time.time }}
      {{ test_name | default("-", true) }}:
      {{ ansible_hostname }}
      ({{ get_agent_variant.stdout | default("-", true) }}:{{ controller_get_agent_version.stdout | default("-", true) }})
      [{{ get_agent_service.status.ActiveState | default("-", true) }}:{{ get_agent_service.status.UnitFileState | default("-", true) }}]
      {{ "LocalGetErr: " + get_agent_variant.stderr if get_agent_variant is failed }}
      {{ "RemoteGetErr: " + controller_get_agent_version.stderr if controller_get_agent_version is failed }}
    insertafter: EOF
    mode: "0644"
  tags: [verify]

- name: 'Verify : Pause to get some input...'
  when: >-
    get_agent_variant is failed
    or controller_get_agent_version is failed
  ansible.builtin.pause:
    prompt: "Waiting for input"
    echo: false
  tags: [never, pause]
